<Window x:Class="MyToDo.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyToDo"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:ext="clr-namespace:MyToDo.Extensions"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="MainWindow" Height="768" Width="1280" 
        
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="微软雅黑"
        
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        AllowsTransparency="True"
        >

    <!--
    隐藏当前窗口的边框 WindowStyle="None"
    启动的时候窗口居中 WindowStartupLocation="CenterScreen"
    隐藏最上面的白色边框  AllowsTransparency="True"
    设置上下文，自动绑定 prism:ViewModelLocator.AutoWireViewModel="True"
    设置固定字体 FontFamily="{DynamicResource MaterialDesignFont}"
    -->

    <materialDesign:DialogHost
        Identifier="Root"
        DialogTheme="Inherit"
        x:Name="DialogHost">

        <materialDesign:DrawerHost
            x:Name="drawerHost"
            IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">

            <!--菜单栏-->
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <!--左侧头像和名字-->
                    <StackPanel Margin="0,20" DockPanel.Dock="Top">
                        <Image Source="/Images/user.png" Width="50" Height="50" Margin="10,5">
                            <Image.Clip>
                                <EllipseGeometry Center="25,25" RadiusX="25" RadiusY="25"/>
                            </Image.Clip>
                        </Image>
                        <TextBlock Text="{Binding UserName}" Margin="0,10" HorizontalAlignment="Center"/>
                    </StackPanel>

                    <!--菜单-->
                    <ListBox x:Name="menuBar" ItemContainerStyle="{StaticResource MyListBoxItemStyle}" ItemsSource="{Binding MenuBars}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NavigateCommand}" 
                                                        CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBox}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <!--如果点击空白没有效果 添加 Background="Transparent"-->
                                <StackPanel Orientation="Horizontal" Background="Transparent">
                                    <materialDesign:PackIcon Margin="15,0" Kind="{Binding Icon}" />
                                    <TextBlock Margin="10,0" Text="{Binding Title}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <materialDesign:Snackbar x:Name="Snackbar" Panel.ZIndex="1" MessageQueue="{materialDesign:MessageQueue}"/>
                <materialDesign:ColorZone
                    x:Name="ColorZone"
                    Padding="16"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    Mode="PrimaryMid"
                    DockPanel.Dock="Top">
                    <DockPanel>

                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                            <Button x:Name="btnMin" Content="—"  Style="{StaticResource MaterialDesignFlatMidBgButton}"/>
                            <Button x:Name="btnMax" Content="☐"  Style="{StaticResource MaterialDesignFlatMidBgButton}"/>
                            <Button x:Name="btnClose" Content="✕"  Style="{StaticResource MaterialDesignFlatMidBgButton}"/>
                        </StackPanel>

                        <materialDesign:PopupBox DockPanel.Dock="Right">
                            <materialDesign:PopupBox.ToggleContent>
                                <Image Source="/Images/user.png" Width="30" Height="30" Margin="30,5">
                                    <Image.Clip>
                                        <EllipseGeometry Center="15,15" RadiusX="15" RadiusY="15"/>
                                    </Image.Clip>
                                </Image>
                            </materialDesign:PopupBox.ToggleContent>

                            <StackPanel>
                                <Button Command="{Binding LoginOutCommand}" Content="注销当前账户"/>
                                <Button Command="{Binding AppCenterCommand}" Content="个人中心"/>
                            </StackPanel>
                        </materialDesign:PopupBox>



                        <StackPanel Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                IsChecked="False"
                                AutomationProperties.Name="HamburgerToggleButton"/>

                            <Button
                                Margin="24,0,0,0"
                                ToolTip="Previous Item"
                                Command="{Binding GoBackCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowLeft, Size=24}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                            <Button 
                                Margin="16,0,0,0"
                                ToolTip="Next Item"
                                Command="{Binding GoForwardCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowRight, Size=24}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                            <TextBlock
                                Margin="16,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="22"
                                AutomationProperties.Name="Material Design In XAML Toolkit"
                                Text="MyToDo笔记本"/>
                        </StackPanel>



                    </DockPanel>
                </materialDesign:ColorZone>

                <ContentControl Grid.Row="1" prism:RegionManager.RegionName="{x:Static ext:PrismManager.MainViewRegionName}"/>
            </Grid>




        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
